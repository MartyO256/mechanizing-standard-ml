% Equalities

LF atom-eq : atom -> atom -> type =
| atom-eq/i : atom-eq R R
;
--name atom-eq Deq.

LF eterm-eq : eterm -> eterm -> type =
| eterm-eq/i : eterm-eq M M
;
--name eterm-eq Deq.

LF etp-eq : etp -> etp -> type =
| etp-eq/i : etp-eq A A
;
--name etp-eq Deq.

LF term-eq : term -> term -> type =
| term-eq/i : term-eq M M
;
--name term-eq Deq.

LF tp-eq : tp -> tp -> type =
| tp-eq/i : tp-eq T T
;
--name tp-eq Deq.

% Symmetry

proof atom-eq-symm : [ |- atom-eq R R'] -> [ |- atom-eq R' R] =
/ total /
?
;

proof term-eq-symm : [ |- term-eq M N] -> [ |- term-eq N M] =
/ total /
?
;

proof tp-eq-symm : [ |- tp-eq A B] -> [ |- tp-eq B A] =
/ total /
?
;

% Transitivity

proof atom-eq-trans : [ |- atom-eq R1 R2] ->
                        [ |- atom-eq R2 R3] -> [ |- atom-eq R1 R3] =
/ total /
?
;

proof term-eq-trans : [ |- term-eq M N] ->
                        [ |- term-eq N O] -> [ |- term-eq M O] =
/ total /
?
;

proof tp-eq-trans : [ |- tp-eq A B] -> [ |- tp-eq B C] -> [ |- tp-eq A C] =
/ total /
?
;

% Cons Lemmas

proof app-resp : [ |- atom-eq R R'] ->
                   [ |- term-eq M M'] -> [ |- atom-eq (app R M) (app R' M')] =
/ total /
?
;

proof atom-resp-atom : { R : [ x : atom |- atom] } [ |- atom-eq Q Q'] ->
                         [ |- atom-eq (R[Q]) (R[Q'])] =
/ total /
?
;

proof term-resp-term : { M : [ x : term |- term] } [ |- term-eq N N'] ->
                         [ |- term-eq (M[N]) (M[N'])] =
/ total /
?
;

proof tp-resp-tp : { A : [ x : tp |- tp] } [ |- tp-eq B B'] ->
                     [ |- tp-eq (A[B]) (A[B'])] =
/ total /
?
;

proof term-resp-atom : { M : [ x : atom |- term] } [ |- atom-eq R R'] ->
                         [ |- term-eq (M[R]) (M[R'])] =
/ total /
?
;

proof tp-resp-atom : { A : [ x : atom |- tp] } [ |- atom-eq R R'] ->
                       [ |- tp-eq (A[R]) (A[R'])] =
/ total /
?
;

proof tp-resp-term : { A : [ x : term |- tp] } [ |- term-eq M M'] ->
                       [ |- tp-eq (A[M]) (A[M'])] =
/ total /
?
;

% Cdr lemmas

proof atom-eq-cdr-app : [ |- atom-eq (app R M) (app R' M')] ->
                          [ |- atom-eq R R'] -> [ |- term-eq M M'] =
/ total /
?
;
