% Expansion

LF expand : atom -> tp -> term -> type =
| expand/t : expand R t (at R)

| expand/pi :
  ({ x : atom } expand x A (M x)) ->
  ({ x : atom } expand (app R (M x)) (B x) (N x)) ->
    expand R (pi A B) (lam N)

| expand/sigma :
  expand (pi1 R) A M ->
  expand (pi2 R) (B (pi1 R)) N ->
    expand R (sigma A B) (pair M N)

| expand/sing : expand R (sing R') (at R')

| expand/one : expand R one star
;
